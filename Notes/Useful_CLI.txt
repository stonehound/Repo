Important Terms:
"bash" (Bourne Again Shell, means of writing scripts that support variables, conditional statements, and loops within command terminal)
"CLI" (Command Line Interface, text-based interface for interacting with computer systems and executing commands)
"shell" (command-line interpreter that provides an interface for users to interact with the OS, execute commands, run scripts, and perform system operations including command history, IO redirection, variables, and control structures)
"directory" (comparable to a folder, used to organize files)
"home" (personal directory assigned to a user)
"package" (compressed software archive file containing all the files included in==with a softwareapplication that provides and functionality)
"distro" (Distribution, complete OS including Linux Kernel, software packages, and various tools & utilities, i.e. Ubuntu, Fedora, Debian, CentOS)
"file system" (method or structure OS uses to organize and store files to disk, i.e. ext4, XSF, Btrfs, and NTFS)
"GNU" (open-source project to create complete Unix-like OS, Linus distros often combine Linux Kernel with GNU software to create complete OS)
"Kernel" (OS core, provides esential services, manages hardware resources, and facilitates communication between software and hardware)
"IP Address" (Internet Protocol Address, used for netork configuration, routing, and device communication)
"Kernel Panic" (critical system error in the Linux Kernel)
"SQL" (Structured Query Language, retrieves and manipulates database data, allows users to perform operations like data retrieval, insertion, deletion, and modification)
"root" (superuser or administrator account wiht complete control over OS resources.)
"UEFI" (Unified Extensible Firmware Interface, replaces BIOS[Basic Input/Output System] in newer cmputers, provides advanced boot and system initialization capabilities, supports large disk sizes, and additional security features)
"virtualization" (running multiple virtual instances of the OS or application on a signle physical computer, i.e. Kernel-based Virtual Machine, Xen, Docker, and LXC)
"Wi-Fi" (Wireless Fidelity, allows devices to connect ot Local Area Networks)
"command options" (modifies behavior of shell commands, single letter preceded by -, i.e. -a or -d could be options that follow a shell command)
"shebang" (first line of code necessary to run bash script , #!/bin/bash)
"executable" (a file with code that enables use to run the code when the file's icon is clicked on in the GUI)
"prompt" (username@systemname:~$, the terminal prompting the user of this system for a comand)
"wildcard" (globbing patterns, used to refer to multiple files)
"shell flag" (i.e. -a -r -m, additional to comands that change their functionality)
"STREAMS" (means of communicating terminal commands to impliment character drivers, network protocols, and inter-process communiccation)
"stdout" (standard output, file descriptor 2, stream begins when terminal starts, i.e. files or screen)
"stdin" (standard input, file descriptor 1, stream begins when terminal starts, i.e. keyboard, files, the outputs of other processes and the terminal)
"stderr" (standard error, file descriptor 0, stream begins when terminal starts)
"file descriptor" (a non-negative number that used to access a file or stream)

General Commands:
free -m (displays available memory)
apt-get update (syncs list of packages on sys w/ list in repositories, use before installing new packages to make sure they're the latest version)
apt-get upgrade (upgrades all software packages installed)
apt-get full-uprade (upgrades softare including dependancies)
apt-get --purge remove app_name (fully uninstalls app_name)
sudo rpi-eeprom-update update firmware
wget -P ~/ https://website.com (download from website to home) 
clear (clears previously run commands and text from the terminal)
date (prints current date)
find / -name eample.txt (searches whole sys for the file example.txt, outputs list of all directories that containthe file) 
vim (faster nano?)
poweroff (immediate shutdown)
raspi-config (opens configuration setting menu)
reboot (immediate reboot)
shutdown -h now (immedate shutdown)
shutdown -h 01:22 (shutdown at 1:22am)
startx (Opens GUI)
sudo (administrative prefix)
echo"example" (prints "example" on newline)
whoami (returns username)
history (produces a numbered list of previous commands)
ctrl r (reverse search command, allows you to type out a command to search for most recent similar command)
whatis command ()
man command (manual, proceeds a command to provide significant information about how the command functions)
sleep (delays command by a number of seconds)
sensible-browser (opens default browser)
alias foobar='ls -la' (sets alias for 'ls -l', foobar now functions as 'ls -la', make permanent by editting ~/.bashrc)
open (opens file or website in preferred application)

Prefixes & Intermediate Symbols:
sudo (administrative prefix)
$ (at the end of the terminal prompt indicates regular user)
~ (usually used as a shortcut to the home directory)
| (pipe operator, the output of one command is sent as the input of another command)
> (output redirection operator, redirects standard output)
>> (output redirection operator with append, redirects standard outputto append the end of the target)
< (input redirection operator, redirects standard input)
2> (stderr)
!! (repeat previous command)
& (executes first command in the background)
&& (executes first command in the background and proceeds to the second command it is exists with success)
tee (reads standard input and sends it to standard output and files)
pwd (Print Working Directory, shell command dsplays file path from root directory to current directory)
cd (Change Directory, changes to specified directoy)
man (changes terminal mode to Manual mode, provides info on commands and lists command options)
--verbose (-v, command option that enables more detailed output)
-r (performs the command recursively)
/dev/null (location that immediately discards whatever is sent to it)

Wildcards:
* (represents any single character or string)
? (reresents any single character)
[] (represents any character in the brackets)
{} (represents terms are separated by commas and each term must be the name of something or a wildcard)

File & Directory Commands:
cat example.txt (displays contents of example.txt)
cd /abc/xyz (changes current directory to the abc/xyz directory)
cd / (changes directory to root)
cd (changes directory to /home)
cd - (chnge directory to last directory)
cd .. (changes directory to the parent directory of the current directory)
cd ../.. (changes directory to the parent directory of the parent directory of the current directory)
cp XXX (copies file or directory XXX, pastes is to a specified location)
cp example.txt/home/pi/office (copies example.txt, pastes in the /home/pi/directory)
cp /home/pi/documents/example.txt /home/pi/office/ (copies example.txt from the documents directory to the office directory)
cp * /home/pi (copies all files and directories in the current directory to /home/pi)
cp -i (prompts you before copying, if you copy a file over to a directory that has the same filename, the file will be overwritten with whatever you are copying over)
ls -a (lists all contents in current directory including hidden files)
ls -t (list all contents in current directory, by the time they wre last modified)
ls -l (lists files in the current directory, files size, date modified, and permissions)
ls -R (list all files in the current directory, and if the current directory has subdirectories and files, the command works on those files too)
ls -la (lists all files in the current directory, files size, date modified, and permissions, including hideen files)
ll (shorthand for ls -l, possibly only on ubuntu???)
ls > output.txt (captures the output of ls and stores that information within output.txt in the current directory)
echo "string" > output.txt (captures "string" and stores it within output.txt, created within current directory)
mkdir example_directory (create new directory named example_directory in current directory)
mkdir -p dir1/dir2/dir3 (creates dir3 within dir2 within dir1 within the current directory)
mv XXX (moves file or directory names XXX to specified location)
mv example.txt /home/pi/office/ (moves example.txt from current directry to the /home/pi/office directory)
mv /home/pi/documents/example.txt /home/pi/office/ (moves example.txt from the documents directory to the office directory)
mv example.txt newfile.txt (rename example.txt to newfile.txt)
rm example.txt (deletes file example.txt)
chmod (allows adinistrator to set or modify file permissions, read, write, or execute)
sudo chmod +x example_shell.sh (grant superuser permission to change file permission for example_shell.sh to become executeable, +x adds the exectuable function)
rmdir example_directory (deletes example_direcotry if it is empty)
scp user@10.0.0.32:/some/path/file.txt (copies a file over SSH, can be used to download a file from a PC to Pi)
"user@10.0.0.32" (refers to the usernad & local IP address of the PC)
"/some/path/file.txt" (refers to the path and filename of the PC)
touch example.txt (creates a new, empty file named example.txt in the current directoy)
file examplefile (returns the files type of examplefile)
find /home -name example.jpg (searches specified directory for file by name)
find /home -type d -name MyFolder (searches specified directory for directory by name)

Reading & Writing Files:
less (displays a file in a page-by-page manner, q to quit, g to top, G to bottom, /search to search)
nano example.txt (opens txt file in linus text editor nano)
echo input text > example.txt (creates example.txt with 'input text' a contents, this will overwrite files if they already exist)
echo input text > example.txt (appends 'input text' to the end of the contents of target .txts)
cat < example.txt > inputexample.txt (cat takes example.txt as standard input, output of cat is then standard input for inputexample.txt)
crtl o (save file in nano, will prompt for file name)
ctrl x (prompts you to save before exiting nano)

Networking & Internet Commands:
ifconfig (to check the status of wireless connection you are on, checks if wlan0 aquired IP address)
iwconfig (checks which network the wireless adapter is using)
iwlist wlan0 scan (prints list of available wifi networks)
iwlist wlan0 scan | grep ESSID (use grep along with the name of a field to list only the fields you need, i.e. ESSID)
nmap (scans network and lists connectioned devices, port number, protocol, state, OS, MAC address, and other info)
ping (tets connectivity between two devices connected on the network, also works for web addresses)
ping 10.0.0.32 (sends a packet to the device at IP 10.0.0.32, waits fore response)
wget http://www.website.com/example.txt (downloads the file example.txt from website.com, saves to current directory)
nmcli radio wifi (checks to see if wifi is enabled)
nmcli radio wifi on (turns wifi on)
nmcli dev wifi list (lists available networks, this is much more readable and prefered)
sudo nmcli --ask dev wifi connect <example_ssid> (connect to the network with the name of the network associated with <example_ssid>, be prepared to provide password)
sudo nmcli --ask dev wifi connect <example_ssid> hidden yes (for connecting to hidden networks)
nmcli --fields autoconnect-priority,name connection (check for network connection priority)
nmcli connection modify "Example_Network" connection.autoconnect-priority 10 (This modifies connection priority, the higher the number, the more it is prioritized)

System Information Commands:
cat /proc/meinfo (shows details about your memory)
cat /proc/partitions (shows the size and number of partitions of you SD card or hard drive)
cat /proc/version (shows which version of Raspberry Pi in use)
df -h (shows information about available disk space)
df / (shows how much free disk space is available)
dpkg --get-selections (shows all of your installed packages)
dpkg --get-selections | grep XXX (shows all installed packages related to XXX)
free (show how much free memory is available)
hostname -I (shows IPP address of your Raspberry Pi)
hostnamectl (shows detailed info about OS)
lsusb (lists USB hardware connected to you Raspberry Pi)
UP key (pressing the UP key will print the last command enetered into the command prompt, easy way to repeat previous command of make corrections)
vcgencmd measure_temp (shows CPU temperature)
vcgencmd get_mem arm && vcgencmd get_mem gpu (shows memory split between CPU and GPU)

